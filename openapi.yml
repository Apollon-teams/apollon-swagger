openapi: 3.0.3
info:
  title: Apollon API
  description: |
    Apollon 顧客管理サービスのAPI仕様書です。
    このドキュメントは、管理者、キャスト、およびWeb予約システム間の対話に必要なすべてのエンドポイントを定義します。
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: http://localhost:8080/v1
    description: 開発環境サーバー
  - url: https://api.apollon.example.com/v1
    description: 本番環境サーバー

tags:
  # 管理者向け
  - name: Admin-Auth
    description: 認証関連 (管理者)
  - name: Admin-Shops
    description: 店舗管理
  - name: Admin-Staffs
    description: スタッフ管理
  - name: Admin-Casts
    description: キャスト管理
  - name: Admin-Customers
    description: 顧客管理
  - name: Admin-Rooms
    description: ルーム管理
  - name: Admin-Reservations
    description: 予約管理 (管理者)
  - name: Admin-Reports
    description: レポート機能 (管理者)

  # キャスト向け
  - name: Cast-Auth
    description: 認証関連 (キャスト)
  - name: Cast-Profile
    description: プロフィール管理 (キャスト)
  - name: Cast-Customers
    description: 顧客管理 (キャスト)
  - name: Cast-Reservations
    description: 予約管理 (キャスト)
  - name: Cast-Reports
    description: レポート機能 (キャスト)

  # Web予約向け
  - name: Web-Reservations
    description: Web予約

paths:
  # Admin Auth
  /admin/auth/login:
    post:
      tags:
        - Admin-Auth
      summary: 管理者ログインAPI
      description: メールアドレスとパスワードで認証し、トークンを返します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/models/admin/auth/LoginRequest.yaml"
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: "./components/results/admin/auth/LoginResponse.yaml"
        "400":
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /admin/auth/logout:
    post:
      tags:
        - Admin-Auth
      summary: 管理者ログアウトAPI
      description: 現在のセッションを無効化します。
      security:
        - BearerAuth: []
      responses:
        "204":
          description: ログアウト成功
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  # Admin Shops
  /admin/shops:
    get:
      tags:
        - Admin-Shops
      summary: 店舗一覧取得API
      description: 登録されている店舗の一覧を取得します。
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./components/models/admin/Shop.yaml"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
    post:
      tags:
        - Admin-Shops
      summary: 店舗新規登録API
      description: 新しい店舗を登録します。
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/models/admin/Shop.yaml"
      responses:
        "201":
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: "./components/models/admin/Shop.yaml"
        "400":
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /admin/shops/{shopId}:
    get:
      tags:
        - Admin-Shops
      summary: 店舗情報取得API
      description: 指定したIDの店舗情報を取得します。
      security:
        - BearerAuth: []
      parameters:
        - $ref: "./components/parameters/common/PathId.yaml"
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "./components/models/admin/Shop.yaml"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
    patch:
      tags:
        - Admin-Shops
      summary: 店舗情報更新API
      description: 指定したIDの店舗情報を更新します。
      security:
        - BearerAuth: []
      parameters:
        - $ref: "./components/parameters/common/PathId.yaml"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/models/admin/Shop.yaml"
      responses:
        "200":
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "./components/models/admin/Shop.yaml"
        "400":
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
    delete:
      tags:
        - Admin-Shops
      summary: 店舗削除API
      description: 指定したIDの店舗情報を削除します。
      security:
        - BearerAuth: []
      parameters:
        - $ref: "./components/parameters/common/PathId.yaml"
      responses:
        "204":
          description: 削除成功
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /web/shops/{shopId}/casts:
    get:
      tags:
        - Web-Reservations
      summary: 予約可能キャスト一覧取得API
      description: 指定された店舗のWeb予約が可能なキャストの一覧を取得します。
      parameters:
        - name: shopId
          in: path
          required: true
          description: 店舗ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./components/models/web/PublicCast.yaml"
        "404":
          description: 店舗が見つかりません
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /web/shops/{shopId}/courses:
    get:
      tags:
        - Web-Reservations
      summary: 予約可能コース一覧取得API
      description: 指定された店舗のWeb予約で利用できるコースの一覧を取得します。
      parameters:
        - name: shopId
          in: path
          required: true
          description: 店舗ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./components/models/web/PublicCourse.yaml"
        "404":
          description: 店舗が見つかりません
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /web/shops/{shopId}/availability:
    get:
      tags:
        - Web-Reservations
      summary: 空き時間取得API
      description: 指定された店舗、日付、キャスト、コース条件に基づいた予約可能な時間帯のスロットを取得します。
      parameters:
        - name: shopId
          in: path
          required: true
          description: 店舗ID
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          required: true
          description: 空き時間を検索する日付 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: cast_id
          in: query
          description: 絞り込みたいキャストのID
          schema:
            type: string
            format: uuid
        - name: course_id
          in: query
          required: true
          description: 予約したいコースのID（所要時間の計算に利用）
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "./components/results/web/Availability.yaml"
        "404":
          description: 店舗、キャスト、またはコースが見つかりません
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

  /web/reservations:
    post:
      tags:
        - Web-Reservations
      summary: 新規Web予約作成API
      description: 顧客からの情報に基づいて新しいWeb予約を作成します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/models/web/WebReservationRequest.yaml"
      responses:
        "201":
          description: 予約成功
          content:
            application/json:
              schema:
                $ref: "./components/results/web/ReservationConfirmation.yaml"
        "400":
          description: リクエストが無効です（入力値エラーなど）
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"
        "409":
          description: 予約の競合（指定された時間帯が既に埋まっているなど）
          content:
            application/json:
              schema:
                $ref: "./components/models/common/Error.yaml"

components:
  securitySchemes:
    BearerAuth:
      $ref: "./components/securitySchemes/BearerAuth.yaml"
  parameters:
    PathId:
      $ref: "./components/parameters/common/PathId.yaml"
